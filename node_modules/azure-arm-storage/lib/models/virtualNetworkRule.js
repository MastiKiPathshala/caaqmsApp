/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the VirtualNetworkRule class.
 * @constructor
 * Virtual Network rule.
 *
 * @member {string} virtualNetworkResourceId A URL of vnet, subnet, classicVnet
 * or classicSubnet.
 *
 * @member {string} [action] The action of virtual network ACL rule. Possible
 * values include: 'Allow'. Default value: 'Allow' .
 *
 * @member {string} [state] Gets the state of virtual network ACL rule.
 * Possible values include: 'provisioning', 'deprovisioning', 'succeeded',
 * 'failed', 'networkSourceDeleted'
 *
 */
class VirtualNetworkRule {
  constructor() {
  }

  /**
   * Defines the metadata of VirtualNetworkRule
   *
   * @returns {object} metadata of VirtualNetworkRule
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'VirtualNetworkRule',
      type: {
        name: 'Composite',
        className: 'VirtualNetworkRule',
        modelProperties: {
          virtualNetworkResourceId: {
            required: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          action: {
            required: false,
            serializedName: 'action',
            defaultValue: 'Allow',
            type: {
              name: 'Enum',
              allowedValues: [ 'Allow' ]
            }
          },
          state: {
            required: false,
            serializedName: 'state',
            type: {
              name: 'Enum',
              allowedValues: [ 'provisioning', 'deprovisioning', 'succeeded', 'failed', 'networkSourceDeleted' ]
            }
          }
        }
      }
    };
  }
}

module.exports = VirtualNetworkRule;
